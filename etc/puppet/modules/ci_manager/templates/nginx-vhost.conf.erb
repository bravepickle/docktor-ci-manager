server {
    listen 80 default_server;
#    listen 443 default_server;
    root /data/www;
#server_name {{ hostname }} {{ host_aliases|join(' ') }};

    default_type text/html;

#    ssl                     on;
#    ssl_certificate         /data/private/certs/domain.crt;
#    ssl_certificate_key     /data/private/certs/domain.key;

    ## Default web interfaces:
#    - http://docktor-ci-manager:9000/ - dockerUI interface to manage images and containers
#- http://docktor-ci-manager:9001/ - SonarQube
#- http://docktor-ci-manager:5000/ - Docker registry
#- http://docktor-ci-manager:8153/ - Dockerized GO CD Server

#    TODO: add subdomains and proxy them
#    location /docker-ui {
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_pass http://localhost:9000;
#        proxy_redirect http://localhost:9000/ /docker-ui;
#    }
#
#    location /sonar {
#        alias /;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_pass http://localhost:9001;
#    }
#
#    location /docker-registry {
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_pass http://localhost:5000;
#    }
#
#    location /go-cd {
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_pass http://localhost:8153;
#    }


    location / {
        index index.html;
#        try_files $uri =404;
    }

    access_log /var/log/nginx/access-default.log;
    error_log /var/log/nginx/error-default.log;
}

server {
    listen 80;
    server_name docker-ui.docktor-ci-manager;

    default_type text/html;

    location / {
        proxy_set_header Connection "";
        proxy_set_header Host $proxy_host;
#        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_pass http://docktor-ci-manager:9000;
    }

    access_log /var/log/nginx/access-docker-ui.log;
    error_log /var/log/nginx/error-docker-ui.log;
}

server {
    listen 80;
    server_name sonar.docktor-ci-manager;

    default_type text/html;

    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_pass http://localhost:9001;
    }

    access_log /var/log/nginx/access-sonar.log;
    error_log /var/log/nginx/error-sonar.log;
}

server {
    listen 443;
#    listen 80;
    server_name registry.docktor-ci-manager;

    ssl_certificate         /data/private/certs/domain.crt;
    ssl_certificate_key     /data/private/certs/domain.key;

    ssl on;
    ssl_session_cache  builtin:1000  shared:SSL:10m;
    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;


    default_type text/html;

    location / {
        proxy_ssl_verify off;
        proxy_ssl_protocols SSLv2 SSLv3 TLSv1 TLSv1.1 TLSv1.2;
        proxy_hide_header X-Frame-Options;
        proxy_set_header X-Real-IP $remote_addr;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_pass https://docktor-ci-manager:5000;

        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;

        # Fix the â€œIt appears that your reverse proxy set up is broken" error.
        proxy_read_timeout  90;

        proxy_redirect      https://docktor-ci-manager:5000 https://registry.docktor-ci-manager;
    }

    access_log /var/log/nginx/access-registry.log;
    error_log /var/log/nginx/error-registry.log;
}

# FIXME: fix proxying
server {
#    listen 443;
    listen 80;
    server_name go-cd.docktor-ci-manager;

    default_type text/html;

#    ssl                     on;
#    ssl_certificate         /data/private/certs/domain.crt;
#    ssl_certificate_key     /data/private/certs/domain.key;
#    ssl_session_cache shared:SSL:10m;
#    ssl_verify_client off;
#    ssl_protocols        SSLv3 TLSv1 TLSv1.1 TLSv1.2;
#    ssl_ciphers RC4:HIGH:!aNULL:!MD5;
#    ssl_prefer_server_ciphers on;
#
##    proxy_ssl on;
#    proxy_ssl_certificate /data/private/certs/domain.crt;
#    proxy_ssl_certificate_key /data/private/certs/domain.key;


    location / {
#        proxy_ssl_verify off;
#        proxy_ssl_protocols SSLv2 SSLv3 TLSv1 TLSv1.1 TLSv1.2;
        proxy_set_header Host $host;
        proxy_set_header Origin "http://localhost:8153";
        proxy_hide_header X-Frame-Options;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_pass http://localhost:8153;
#        proxy_pass https://localhost:8153;
    }

    access_log /var/log/nginx/access-gocd.log;
    error_log /var/log/nginx/error-gocd.log;
}

